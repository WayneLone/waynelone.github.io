{"meta":{"title":"Wayne's Blog","subtitle":"Do it, do better!","description":"Personal blog","author":"Wayne Wang","url":"http://www.dimsolo.com"},"pages":[{"title":"categories","date":"2017-03-21T09:16:31.000Z","updated":"2017-03-21T09:17:42.000Z","comments":true,"path":"categories/index.html","permalink":"http://www.dimsolo.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2017-03-21T08:40:46.000Z","updated":"2017-03-21T09:05:37.968Z","comments":true,"path":"tags/index.html","permalink":"http://www.dimsolo.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"lnmp & ss的那些事","slug":"lnmp-ss-more","date":"2017-06-09T00:21:00.000Z","updated":"2017-06-09T03:08:50.802Z","comments":true,"path":"2017/06/09/lnmp-ss-more/","link":"","permalink":"http://www.dimsolo.com/2017/06/09/lnmp-ss-more/","excerpt":"","text":"最近阿里云在频繁的搞活动，于是又入手了一台新加坡主机（控制不住我自己啊::&gt;_&lt;::），接着又走了一遍ss-panel-v3-mod的搭建。这次感触颇深，主要原因是因为自己太追“潮流”引起的 部署环境概述 操作系统为CentOS 7.3 lnmp一键安装包的版本为1.4 具体的组件的版本，PHP选择了版本为7.1.5、MySQL版本为5.5.56 总结出现的问题（未完待续）访问前端网站(ss-panel-v3-mod)直接报错ERROR 5001. 问题还原①安装完lnmp包，一切顺利正常； ②下载完ss-panel-v3-mod源码到网站的根目录下； ③创建完数据库；④使用composer安装ss-panel-v3-mod所需的组件； ⑤配置了/home/wwwroot/{WEB_SITE_DIR}/config/.config.php； ⑥创建了管理员帐户。兴高采烈的访问了一下网站，结果返回了500（心一下就纠结了）, what’s wrong ？ 2. 尝试解决接着就去翻看ss-panel-v3-mod的文档，按照错误排查文档把config.php里的$System_Config[&#39;debug&#39;]值修改为了true，满心欢喜着期待错误出现，结果然并卵用，依旧是500 心一下就凉了大半节，经过一番搜索+思考，总算把错误信息给整出来了。说说怎么整出来的吧！那就是修改php.ini相信每个phper都是知道的，可惜我不是phper（我是dotNet）。lnmp中php.ini所处位置为/usr/local/php/etc/php.ini，修改php.ini文件如下： /usr/local/php/etc/php.ini; 显示错误信息display_errors = On; 显示php开始错误信息display_startup_errors = On; 日志记录错误信息log_errors = On 一般情况下要稍等一小会，如果不想等直接使用/etc/init.d/php-fpm restart，让配置起效 ps: 问题解决后，建议还原设置$System_Config[&#39;debug&#39;]和php.ini 3. 错误详情Warning: require(): open_basedir restriction in effect. File(/home/wwwroot/sspanel/bootstrap.php) is not within the allowed path(s): (/home/wwwroot/sspanel/public/:/tmp/:/proc/) in /home/wwwroot/sspanel/public/index.php on line 7Warning: require(/home/wwwroot/sspanel/bootstrap.php): failed to open stream: Operation not permitted in /home/wwwroot/sspanel/public/index.php on line 7Fatal error: require(): Failed opening required '/home/wwwroot/sspanel/public/../bootstrap.php' (include_path='.:/usr/local/php/lib/php') in /home/wwwroot/sspanel/public/index.php on line 7 4. 解决方案起因是PHP基于open_basedir设置，来限制PHP程序跨目录访问的安全策略，其使用.user.ini文件和nginx来配合（作用和.htaccess文件相同，这个是基于Apache httpd服务器）。 lnmp1.4一键安装对其配置是存在于/usr/local/nginx/conf/fastcgi.conf文件fastcgi_param PHP_ADMIN_VALUE &quot;open_basedir=$document_root/:/tmp/:/proc/&quot;;，个人感觉这个设计有点别扭，这个配置对所有站点都写死了不灵活。 对于详细错误的解释：由于我们在站点配置文件（/usr/local/nginx/conf/vhost/{WEB_SITE}.conf），网站根目录配置root /home/wwwroot/{WEB_SITE_NAME};这一行进行修改（修改成了root /home/wwwroot/{WEB_SITE_NAME}\\public;），因此open_basedir=$document_root/...中$document_root指的是网站的public目录，而非/home/wwwroot/{WEB_SITE_NAME}，在读取bootstrap.php文件（而该文件正好位于/home/wwwroot/{WEB_SITE_NAME}目录下，在public目录上一层）时出错，受跨目录访问安全限制。 主要有两种解决方案： 直接注释掉fastcgi.conf文件中的fastcgi_param PHP_ADMIN_VALUE &quot;open_basedir=$document_root/:/tmp/:/proc/&quot;;这一行，一棒子打死了目录访问安全策略 在fastcgi.conf文件中，修改fastcgi_param PHP_ADMIN_VALUE &quot;open_basedir=$document_root/:/tmp/:/proc/&quot;;，以test.com为例（此域名为添加vhost时输入的域名），修改内容如下：（这样做的坏处时每次添加vhost时都需要手动添加⊙﹏⊙） /usr/local/nginx/conf/fastcgi.conffastcgi_param PHP_ADMIN_VALUE \"open_basedir=/home/wwwroot/test.com/:/tmp/:/proc/\"; 参考资料 ss-panel-v3-mod PHP中.user.ini文件 PHP中php-fpm.conf全局配置段 LNMP安装配置 LNMP添加、删除虚拟主机及伪静态使用教程 php输出所有错误信息","categories":[],"tags":[{"name":"ss-panel-v3-mod","slug":"ss-panel-v3-mod","permalink":"http://www.dimsolo.com/tags/ss-panel-v3-mod/"},{"name":"lnmp","slug":"lnmp","permalink":"http://www.dimsolo.com/tags/lnmp/"}]},{"title":"VS Code搭建AngularJs 1.x开发环境","slug":"vscode-angular","date":"2017-03-22T10:50:11.000Z","updated":"2017-06-02T05:05:01.862Z","comments":true,"path":"2017/03/22/vscode-angular/","link":"","permalink":"http://www.dimsolo.com/2017/03/22/vscode-angular/","excerpt":"","text":"使用VS Code开发AngularJs 1.x，主要为了开发的体验（智能提示） 安装基础工具安装GitNode.js下载地址：https://nodejs.org/en/ 安装TypeScriptnpm install -g typescript 安装typings (TypeScript Definition Manager)npm install -g typings 进行开发配置使用VS code新建项目在项目目录中执行如下命令，初始化操作创建typings.json（所有项目依赖都会在里面） typings init 安装angular.ts来获得angularjs的智能提示，执行如下命令： typings install dt~angular --save 以上只安装了angularJs主文件提示，想要获得更多信息可以执行 typings search angular 参考资料 typings github","categories":[],"tags":[{"name":"vscode","slug":"vscode","permalink":"http://www.dimsolo.com/tags/vscode/"},{"name":"angularjs","slug":"angularjs","permalink":"http://www.dimsolo.com/tags/angularjs/"}]},{"title":"搭建ss-panel-v3-mod环境小记","slug":"build-ss","date":"2017-03-21T09:53:01.000Z","updated":"2017-06-09T00:18:39.295Z","comments":true,"path":"2017/03/21/build-ss/","link":"","permalink":"http://www.dimsolo.com/2017/03/21/build-ss/","excerpt":"","text":"搭建这个环境可把我折腾坏了，持续将近一周，总是出现各种错误（自己有点笨而已）。特此写下这篇文章来记录自己踩过的坑 服务器环境 服务器vps - 本人使用的是 搬瓦工 （bandwagonhost.com已被墙，此站点亦为官方站点），个人感觉速度还可以，用了也很久了。 操作系统CentOS 7 x64（以下操作都以全新CentOS为准 不含radius配置） 系统配置说明（可跳过） 配置epel Repository wget http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-9.noarch.rpmrpm -ivh epel-release-7-9.noarch.rpm 配置vim 编辑/etc/vimrc（目的：防止打开config.php文件时乱码） /etc/vimrc# 设置行号set nuset fileencodings=utf-8,gb2312,gbk,gb18030set termencoding=utf-8set fileformats=unixset encoding=prc# 设置缩进set ts=4set expandtabset autoindent 前端安装说明安装lnmp 安装screen，目的：安装lnmp时间过长防止连接中断引发不必要的错误，安装教程参考 screen教程，如遇中断可使用下面命令恢复，提前是你创建了screen会话 （此步骤可跳过） screen -r lnmp 安装lnmp包，可去该站点查看最新可用的包 wget http://soft.vpser.net/lnmp/lnmp1.3-full.tar.gztar xvzf lnmp1.3-full.tar.gz &amp;&amp; cd lnmp1.3-full./install.sh 安装组件 设置MySQL账户root密码、PHP、Nginx（仅供参考） 新建vhost，并创建数据库 lnmp vhost add 在enter domain时，建议填写真实域名 也可以在nginx配置文件中配置（配置server_name)，可以直接通过域名访问，提前是你域名做了解析 设置如图片所示（仅供参考） 配置nginx 对Nginx进行一些细节配置，打开/usr/local/nginx/conf/vhost/{your domain}.conf，添加下面代码到 server 配置节 location /&#123; try_files $uri $uri/ /index.php$is_args$args;&#125; 修改root配置节，修改为root /home/wwwroot/{your domain}/public PHP程序安装 下载程序代码，执行下面命令 cd /home/wwwroot/&#123;your domain&#125;yum install git -ygit clone https://github.com/glzjin/ss-panel-v3-mod.git tmp -b new_master &amp;&amp; mv tmp/.git . &amp;&amp; rm -rf tmp &amp;&amp; git reset --hard 修改网站配置，添加php对目录操作权限 cd /home/wwwroot/&#123;your domain&#125;chown -R root:root *chmod -R 777 *chown -R www:www storagechattr -i .user.inimv .user.ini publiccd publicchattr +i .user.ini # 重新添加回权限 重启一下nginx service nginx restart 配置数据库 通过浏览器访问phpMyAdmin，地址为http://{your host ip}/phpmyadmin/（建议修改目录名称防止暴露数据库，执行如下脚本），输入MySQL帐户root和密码，选择你在添加nginx vhost时设置的数据库名称 cd /home/wwwroot/default/mv phpmyadmin &#123;new dir name&#125; 我是直接通过SQL菜单手动执行SQL来创建数据库表的，SQL脚本 glzjin_all.sql 这个脚本中有些小问题，需要修改一下再执行，修改代码片段/*!40101 SET ...为/* !40101 SET ...（*号和！号之间加个空格） 安装PHP依赖 同步用户等信息 安装php依赖 执行如下脚本 cd /home/wwwroot/&#123;your domain&#125;php composer.phar installcp config/.config.php.example config/.config.phpvim config/.config.php 进行相应的配置（配置.config.php文件） 主要对站点名称（$System_Config[&#39;appName&#39;]）、后端访问token（$System_Config[&#39;muKey&#39;]）、验证邮件配置（smtp or mailgun）、注册后获得验证码数量（$System_Config[&#39;inviteNum&#39;]）、数据库配置、多用户混淆后缀（$System_Config[&#39;mu_suffix&#39;]） config/.config.php$System_Config['appName'] = ''; // 站点名称$System_Config['muKey'] = ''; // mu key用于后端python访问时的access token$System_Config['mailDriver'] = 'mailgun'; // 邮件 选项值为mailgun/stmp 分别对应着 #stmp #mailgun配置节组$System_Config['inviteNum'] = '0'; // 注册后获得的邀请码数量# database 数据库配置$System_Config['db_driver'] = 'mysql';$System_Config['db_host'] = 'localhost';$System_Config['db_database'] = '';$System_Config['db_username'] = '';$System_Config['db_password'] = '';$System_Config['db_charset'] = 'utf8';$System_Config['db_collation'] = 'utf8_general_ci';$System_Config['db_prefix'] = '';#多用户混淆参数后缀$System_Config['mu_suffix']='baidu.com';# 多用户混淆参数表达式，%5m代表取用户特征 md5 的前五位，%id 代表用户id,%suffix 代表上面这个后缀。$System_Config['mu_regex']='%5m%id.%suffix'; 注：muKey和mu_suffix主要用于和python后端通信使用，因此在后端python中userapiconfig.py文件进行同样的设置，具体对应如下 userapiconfig.pyMU_SUFFIX = '&#123;.config.php $System_Config[\"mu_suffix\"]&#125;'WEBAPI_TOKEN = '&#123;.config.php $System_Config[\"muKey\"]&#125;' 创建管理员账户，用来登录站点配置信息 php -n xcat createAdmin 同步用户，执行如下命令 php xcat syncusers 编辑cron，执行crontab -e，输入以下内容 crontab -e30 22 * * * php /home/wwwroot/&#123;WEBSITE.NAME&#125;/xcat sendDiaryMail*/1 * * * * php /home/wwwroot/&#123;WEBSITE.NAME&#125;/xcat synclogin*/1 * * * * php /home/wwwroot/&#123;WEBSITE.NAME&#125;/xcat syncvpn0 0 * * * php -n /home/wwwroot/&#123;WEBSITE.NAME&#125;/xcat dailyjob*/1 * * * * php /home/wwwroot/&#123;WEBSITE.NAME&#125;/xcat checkjob */1 * * * * php -n /home/wwwroot/&#123;WEBSITE.NAME&#125;/xcat syncnas 没出什么问题的话，现在ss-panel-v3-mod已经能运行起来了，现在进行节点配置 进行此步的目的是为了在userapiconfig.py中填写NODE_ID = {node id} 用第3步创建的管理员登录系统后，选择左下角的管理面板 进入管理面板后，选择左侧的节点列表，再点击右下角的添加按钮 主要填写节点名称、节点地址、节点IP、加密方式、流量比例、节点状态、节点类型，可参考：节点添加说明 如图所示： 后端安装说明 后端使用的是 ShadowsocksR 安装工具 安装pip（python包管理器），执行如下命令： yum install python-setuptools &amp;&amp; easy_install pip 安装libsodium yum -y groupinstall \"Development Tools\"wget https://github.com/jedisct1/libsodium/releases/download/1.0.10/libsodium-1.0.10.tar.gztar xf libsodium-1.0.10.tar.gz &amp;&amp; cd libsodium-1.0.10./configure &amp;&amp; make -j2 &amp;&amp; make installecho /usr/local/lib &gt; /etc/ld.so.conf.d/usr_local_lib.confldconfig 配置服务 下载程序源代码 cd /usr/git clone -b manyuser https://github.com/glzjin/shadowsocks.git 进入shadowsocks目录，安装依赖 cd /usr/shadowsocksyum -y install python-develyum -y install libffi-develyum -y install openssl-develpip install requests 配置程序 得到配置文件 cd /usr/shadowsockscp apiconfig.py userapiconfig.pycp config.json user-config.json 编辑userapiconfig.py，以下仅贴出重要配置 userapiconfig.pyNODE_ID = 1 # 此处修改为之前添加的节点id eg: 3MU_SUFFIX = 'zhaoj.in' # 此处修改为.config.php中$System_Config['mu_suffix']MU_REGEX = '%5m%id.%suffix'API_INTERFACE = 'modwebapi' # 填写为modwebapiWEBAPI_URL = 'https://zhaoj.in' # 此处修改为你当前的站点WEBAPI_TOKEN = 'glzjin' # 此处修改为.config.php中$System_Config['muKey']# Mysql 数据库配置和.config.php配置一样MYSQL_HOST = '127.0.0.1'MYSQL_PORT = 3306MYSQL_USER = 'ss'MYSQL_PASS = 'ss'MYSQL_DB = 'shadowsocks' 执行以下命令，测试服务是否可用 cd /usr/shadowsocks/python server.py # 用于调试 如果服务报错，进行调试的话，主要有以下几个文件： php程序中的app/Middleware/Mod_Mu.php文件，主要负责校验token（muKey） php程序中的config/routes.php，主要是路由配置，查看$app-&gt;group(&#39;/mod_mu&#39;,...，此处代码块主要用于和python交互的 python程序中的webapi_utils.py文件，可以适当输出uri参数，观察当前请求的php地址 在第4步成功的提前下，优化程序 编辑/etc/security/limits.conf，在最后添加如下代码： * soft nofile 51200* hard nofile 51200 运行命令ulimit -n 51200 编辑防火墙配置/etc/sysctl.conf配置如下，配置完成后使用systcl -p使其生效 fs.file-max = 51200net.core.rmem_max = 67108864net.core.wmem_max = 67108864net.core.netdev_max_backlog = 250000net.core.somaxconn = 4096net.ipv4.tcp_syncookies = 1net.ipv4.tcp_tw_reuse = 1net.ipv4.tcp_tw_recycle = 0net.ipv4.tcp_fin_timeout = 30net.ipv4.tcp_keepalive_time = 1200net.ipv4.ip_local_port_range = 10000 65000net.ipv4.tcp_max_syn_backlog = 8192net.ipv4.tcp_max_tw_buckets = 5000net.ipv4.tcp_fastopen = 3net.ipv4.tcp_rmem = 4096 87380 67108864net.ipv4.tcp_wmem = 4096 65536 67108864net.ipv4.tcp_mtu_probing = 1 安装配置supervisord 安装supervisord，执行如下脚本 yum install supervisor python-pip -ypip install supervisor==3.1chkconfig supervisord onwget https://github.com/glzjin/ssshell-jar/raw/master/supervisord.conf -O /etc/supervisord.confwget https://github.com/glzjin/ssshell-jar/raw/master/supervisord -O /etc/init.d/supervisord 编辑/etc/supervisord.conf，将最后一段修改如下： [program:mu]command=python /root/shadowsocks/server.pydirectory=/root/shadowsocksautorestart=truestartsecs=10startretries=36redirect_stderr=trueuser=root ; setuid to this UNIX account to run the programlog_stdout=true ; if true, log program stdout (default true)log_stderr=true ; if true, log program stderr (def false)logfile=/var/log/mu.log ; child log path, use NONE for none; default AUTO;logfile_maxbytes=1MB ; max # logfile bytes b4 rotation (default 50MB);logfile_backups=10 ; # of logfile backups (default 10) 编辑/etc/init.d/supervisord在这两行之间添加ulimit -n 51200 echo -n $\"Starting supervisord: \"ulimit -n 51200daemon supervisord -c /etc/supervisord.conf 启动supervisord，执行以下命令 service supervisord start 关于升级 cd /usr/shadowsocksgit pull 主要参考资料： ss-panel-v3-mod安装说明 shadowsocks for python 说明以及安装方法 魔改版添加节点的几种方式说明 shadowsocks for python 重大更新日志","categories":[],"tags":[{"name":"ss-panel-v3-mod","slug":"ss-panel-v3-mod","permalink":"http://www.dimsolo.com/tags/ss-panel-v3-mod/"},{"name":"lnmp","slug":"lnmp","permalink":"http://www.dimsolo.com/tags/lnmp/"},{"name":"CentOS","slug":"CentOS","permalink":"http://www.dimsolo.com/tags/CentOS/"}]}]}